version: 2
jobs:
  # The build job
  test:
    working_directory: ~/project
    docker:
      - image: circleci/node:8.15-browsers
    steps:
      # Checkout the code from the branch into the working_directory
      - checkout
      # Log the current branch
      - run:
          name: Show current branch
          command: echo ${CIRCLE_BRANCH}
      # Restore local dependencies from cache
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-
      # Install project dependencies
      - run:
          name: Install local dependencies
          command: npm install
      # Cache local dependencies if they don't exist
      - save_cache:
          key: v1-dependencies-{{ checksum "package.json" }}
          paths:
            - node_modules
      # Lint the source code
      - run:
          name: Linting
          command: npm run lint
      # Test the source code
      - run:
          name: Testing
          command: npm run test -- --no-watch --no-progress --browsers=ChromeHeadlessCI --code-coverage
      # End 2 end test the source code
      - run:
          name: Testing e2e
          command: npm run e2e -- --protractor-config=e2e/protractor-ci.conf.js
  build:
    working_directory: ~/project
    docker:
      - image: circleci/node:8.15-browsers
    steps:
      # Checkout the code from the branch into the working_directory
      - checkout
      # Log the current branch
      - run:
          name: Show current branch
          command: echo ${CIRCLE_BRANCH}
      # Restore local dependencies from cache
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package-lock.json" }}
            - v1-dependencies-
      # Install project dependencies
      - run:
          name: Install local dependencies
          command: npm install
      # Cache local dependencies if they don't exist
      - save_cache:
          key: v1-dependencies-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
      # Build project with different configurations
      # based on the current branch
      - run:
          name: Building
          command: |
            if [ "${CIRCLE_BRANCH}" == "staging" ]; then
              npm run build
            elif [ "${CIRCLE_BRANCH}" == "master" ]; then
              npm run build:ssr
            else
              npm run build
            fi
      - save_cache:
          key: v1-dist-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - dist
workflows:
  version: 2
  test_and_build:
    jobs:
      - test
      - build
