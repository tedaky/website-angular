version: 2
jobs:
  # The test job
  build:
    working_directory: ~/project
    docker:
      - image: circleci/node:8.15-browsers
      - image: circleci/mysql:5.6
        environment:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_ROOT_PASSWORD: ''
          MYSQL_ROOT_HOST: localhost
          MYSQL_HOST: localhost
          MYSQL_DATABASE: db
          MYSQL_USER: root
    steps:
      # Checkout the code from the branch into the working_directory
      - checkout
      # Log the current branch
      - run:
          name: Show current branch
          command: echo ${CIRCLE_BRANCH}
    #   - run:
    #       name: Install MySQL Client
    #       command: sudo apt install -y mysql-client
    #   - run:
    #       name: Install MySQL Server
    #       command: sudo apt install -y mysql-server
      # preinstalled in circleci/* docker image
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://127.0.0.1:3306 -timeout 120s
      - run:
          name: database.json
          command: cp ./config/database.sample.json ./config/database.json
      - run:
          name: db.cred.sample.ts
          command: cp ./config/db.cred.sample.ts ./config/db.cred.ts
      - run:
          name: mysql create db
          command: mysql -h localhost -u root -e 'CREATE DATABASE IF NOT EXISTS db';
      # Restore local dependencies from cache
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package-lock.json" }}
            - v1-dependencies-
      # Install project dependencies
      - run:
          name: Install local dependencies
          command: npm install
      - run:
          name: Install Coveralls
          command: npm install coveralls
      # Cache local dependencies if they don't exist
      - save_cache:
          key: v1-dependencies-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
      # Lint the source code
      - run:
          name: Linting
          command: npm run lint
      # Build project with different configurations
      # based on the current branch
      - run:
          name: Building
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              npm run build:ssr:production
            else
              npm run build:ssr
            fi
      - save_cache:
          key: v1-dist-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - dist
      - run:
          name: Database Migration
          command: npm run db:up:circle:all
      # End 2 end test the source code
      - run:
          name: Testing e2e
          command: npm run e2e -- --protractor-config=e2e/protractor-ci.conf.js
      # Cache local dependencies if they don't exist
      - save_cache:
          key: v1-dependencies-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
      # Test the source code
      - run:
          name: Testing
          command: npm run test -- --no-watch --no-progress --browsers=ChromeHeadlessCI --code-coverage
      - run:
          name: Send Coverage
          command: cat ./coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js
      - save_cache:
          key: v1-dist-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - coverage
workflows:
  version: 2
  test_and_build:
    jobs:
      - build
